name: PostgreSQL service
on:
  push:
    branches:
      - smokeWithCypress
  pull_request:
    branches:
      - smokeWithCypress
jobs:
  dbzui-container:
    runs-on: ubuntu-latest
    env:
      DEBEZIUM_VERSION: "v1.5.0.Beta1"

    services:
      zookeeper:
        image: debezium/zookeeper:1.5

      kafka:
        image: debezium/kafka:1.5
        ports:
          - 9092:9092
        env: 
          ZOOKEEPER_CONNECT: zookeeper:2181

      postgres:
        image: debezium/example-postgres:1.5
        ports:
          - 65432:5432
        env: 
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
      
      connect:
        image: debezium/connect:1.5
        ports:
          - 8083:8083

        env:
          BOOTSTRAP_SERVERS: kafka:9092
          GROUP_ID: 1
          CONFIG_STORAGE_TOPIC: my_connect_configs
          OFFSET_STORAGE_TOPIC: my_connect_offsets
          STATUS_STORAGE_TOPIC: my_connect_statuses   

    steps:
      - name: Checkout Debezium main repository
        uses: actions/checkout@v2
        with:
          repository: debezium/debezium
          ref: ${{ env.DEBEZIUM_VERSION }}
          path: debezium

      - name: Checkout Debezium UI
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: dbzui-${{ runner.os }}-maven-${{ hashFiles('dbzui/pom.xml', 'dbzui/**/pom.xml') }}
          restore-keys: |
            dbzui-${{ runner.os }}-maven-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache local Yarn repository
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: dbzui-${{ runner.os }}-yarn-${{ hashFiles('dbzui/ui/yarn.lock') }}
          restore-keys: |
            dbzui-${{ runner.os }}-yarn-

      - name: Folder list
        run: ls -l
      - name: Folder list
        run: sudo chmod -R 777 /github

        

      - name: Docker build
        run: sudo docker build . --file Dockerfile --tag dbzui-backend:$(date +%s)

  # dbzui-kafka:
  #   if: always()
  #   needs: dbzui-zookeeper
  #   runs-on: ubuntu-latest
  #   container: node:10.18-jessie

  #   services:
  #     kafka:
  #       image: debezium/kafka:1.5
  #       ports:
  #         - 9092:9092
  #       env: 
  #         ZOOKEEPER_CONNECT: dbzui-zookeeper:2181

  #   steps:
  #     # Downloads a copy of the code in your repository before running CI tests
  #     - name: Check out repository code
  #       uses: actions/checkout@v2    

  # dbzui-db-pg:
  #   if: always()
  #   needs: [dbzui-zookeeper, dbzui-kafka]
  #   runs-on: ubuntu-latest
  #   container: node:10.18-jessie

  #   services:
  #     postgres:
  #       image: debezium/example-postgres:1.5
  #       ports:
  #         - 65432:5432
  #       env: 
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: postgres

  #   steps:
  #     # Downloads a copy of the code in your repository before running CI tests
  #     - name: Check out repository code
  #       uses: actions/checkout@v2     

  # dbzui-connect:
  #   if: always()
  #   needs: [dbzui-zookeeper, dbzui-kafka, dbzui-db-pg]
  #   runs-on: ubuntu-latest
  #   container: node:10.18-jessie
  #   services:
  #     connect:
  #       image: debezium/connect:1.5
  #       ports:
  #         - 8083:8083

  #       env:
  #         BOOTSTRAP_SERVERS: dbzui-kafka:9092
  #         GROUP_ID: 1
  #         CONFIG_STORAGE_TOPIC: my_connect_configs
  #         OFFSET_STORAGE_TOPIC: my_connect_offsets
  #         STATUS_STORAGE_TOPIC: my_connect_statuses    

  #   steps:
  #     # Downloads a copy of the code in your repository before running CI tests
  #     - name: Check out repository code
  #       uses: actions/checkout@v2    

  # dbzui-backend:
  #   runs-on: ubuntu-latest
  #   env:
  #     DEBEZIUM_VERSION: "v1.5.0.Beta1"
  #   steps:
  #     # Downloads a copy of the code in your repository before running CI tests
  #     - name: Checkout Debezium UI
  #       uses: actions/checkout@v2    
  #     -   
  #       name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Docker build
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         push: false
  #         tags: user/dbzui-backend:latest

  # headless-chrome:
  #   # if: always()
  #   # needs: [dbzui-zookeeper, dbzui-kafka, dbzui-db-pg, dbzui-connect]
  #   runs-on: ubuntu-latest
  #   container: cypress/included:3.8.3
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         repository: uidoyen/debtest
  #         path: dbzui

  #     - name: Run E2E test
  #       run: |
  #         yarn install
  #         cypress run --project ./dbzui/ui/packages/ui/